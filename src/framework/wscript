subdirs = 'mixer'

def options(opt):
  opt.recurse(subdirs)

def configure(conf):
  conf.recurse(subdirs)

def build(bld):
  bld.recurse(subdirs)

  framework_source = 'server_util.cpp server_base.cpp server_helper.cpp'
  if bld.env.HAVE_ZOOKEEPER_H:
    framework_source +=  ' keeper_common.cpp keeper.cpp'

  bld.shlib(
    source = framework_source,
    target = 'jubatus_framework',
    includes = '.',
    use = 'PFICOMMON jubacommon MSGPACK JUBATUS_MPIO JUBATUS_MSGPACK_RPC MSGPACK LIBGLOG jubacommon_mprpc jubaconverter jubamixer'
    )

  def make_test(t):
    bld.program(
      features='gtest',
      source=t + '.cpp',
      target=t,
      includes='.',
      use='jubatus_framework'
      )

  tests = [
    'mixable_test',
    'server_util_test',
    ]

  for t in tests:
    make_test(t)

  bld.install_files('${PREFIX}/include/jubatus/framework', [
      'keeper.hpp',
      'keeper_common.hpp',
      'server_base.hpp',
      'server_helper.hpp',
      'server_util.hpp',
      'mixable.hpp',
      'aggregators.hpp',
      'data_containor.hpp'
      ])
